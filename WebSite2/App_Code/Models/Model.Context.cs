//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PCSWDBEntities : DbContext
    {
        public PCSWDBEntities()
            : base("name=PCSWDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Pedidos> Pedidos { get; set; }
        public DbSet<Personas> Personas { get; set; }
        public DbSet<RegistrosCompra> RegistrosCompra { get; set; }
        public DbSet<Roles> Roles { get; set; }
        public DbSet<Usuarios> Usuarios { get; set; }
        public DbSet<UsuariosRol> UsuariosRol { get; set; }
        public DbSet<Vehiculos> Vehiculos { get; set; }
        public DbSet<Ventas> Ventas { get; set; }
    
        public virtual int SP_ActualizarEstadoCompra(Nullable<int> idCompra, Nullable<int> idVehiculo)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("IdVehiculo", idVehiculo) :
                new ObjectParameter("IdVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarEstadoCompra", idCompraParameter, idVehiculoParameter);
        }
    
        public virtual int SP_ActualizarVehiculos(Nullable<int> id, Nullable<int> cantidad)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarVehiculos", idParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<SP_ConsultarCompras_Result> SP_ConsultarCompras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarCompras_Result>("SP_ConsultarCompras");
        }
    
        public virtual ObjectResult<SP_ConsultarComprasVencidas_Result> SP_ConsultarComprasVencidas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarComprasVencidas_Result>("SP_ConsultarComprasVencidas");
        }
    
        public virtual ObjectResult<SP_ConsultarEstadisticasVentas_Result> SP_ConsultarEstadisticasVentas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarEstadisticasVentas_Result>("SP_ConsultarEstadisticasVentas");
        }
    
        public virtual ObjectResult<SP_ConsultarUsuario_Result> SP_ConsultarUsuario(string identificacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarUsuario_Result>("SP_ConsultarUsuario", identificacionParameter);
        }
    
        public virtual ObjectResult<SP_ConsultarVehiculo_Result> SP_ConsultarVehiculo(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarVehiculo_Result>("SP_ConsultarVehiculo", idParameter);
        }
    
        public virtual ObjectResult<SP_ConsultarVentas_Result> SP_ConsultarVentas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarVentas_Result>("SP_ConsultarVentas");
        }
    
        public virtual int SP_InsertarCompra(string identificacion, Nullable<int> idVehiculo)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("IdVehiculo", idVehiculo) :
                new ObjectParameter("IdVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarCompra", identificacionParameter, idVehiculoParameter);
        }
    
        public virtual int SP_InsertarUsuario(string identificacion, string nombre, string apellidos, string direccion, string telefono, string nroCuenta, string user, string password, Nullable<int> idRol, string correo)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var nroCuentaParameter = nroCuenta != null ?
                new ObjectParameter("NroCuenta", nroCuenta) :
                new ObjectParameter("NroCuenta", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarUsuario", identificacionParameter, nombreParameter, apellidosParameter, direccionParameter, telefonoParameter, nroCuentaParameter, userParameter, passwordParameter, idRolParameter, correoParameter);
        }
    
        public virtual int SP_InsertarVehiculo(string modelo, string marca, Nullable<decimal> precio, Nullable<int> cantidad)
        {
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarVehiculo", modeloParameter, marcaParameter, precioParameter, cantidadParameter);
        }
    
        public virtual int SP_InsertarVentas(Nullable<int> idRegistroCompra)
        {
            var idRegistroCompraParameter = idRegistroCompra.HasValue ?
                new ObjectParameter("IdRegistroCompra", idRegistroCompra) :
                new ObjectParameter("IdRegistroCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarVentas", idRegistroCompraParameter);
        }
    
        public virtual int PruebaCreada(Nullable<int> idCompra, Nullable<int> idVehiculo)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("IdVehiculo", idVehiculo) :
                new ObjectParameter("IdVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PruebaCreada", idCompraParameter, idVehiculoParameter);
        }
    }
}
